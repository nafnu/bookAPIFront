{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dctutor\\\\Desktop\\\\BackEnd\\\\bookAPI2\\\\front-end\\\\src\\\\components\\\\Books.js\";\n//component to view all dogs\nimport React from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Books extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      isLoaded: true\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/book').then(response => {\n      this.setState({\n        books: response.data,\n        isLoaded: true\n      });\n    }).catch(error => {\n      // handle error \n      // in case we get an error from the server, e.g. the server is offline\n      this.setState({\n        isLoaded: false,\n        error\n      });\n    });\n  }\n\n  render() {\n    //assign variables using the state\n    const {\n      isLoaded,\n      error,\n      books\n    } = this.state; // also render this if the SERVER is offline\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"The page is loading or the SERVER is down...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this); //render this part of code if we received the data from the server\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ISBN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Year Publication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Publishing House\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: books.map(book => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: book._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: book.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: book.ISBN\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: book.yearPublication\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: book.publishingHouse\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, book._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Books;","map":{"version":3,"sources":["C:/Users/dctutor/Desktop/BackEnd/bookAPI2/front-end/src/components/Books.js"],"names":["React","Link","useNavigate","axios","Books","Component","constructor","props","state","books","isLoaded","componentDidMount","get","then","response","setState","data","catch","error","render","textAlign","map","book","_id","title","author","ISBN","yearPublication","publishingHouse"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,WAAd,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAE;AAEfR,IAAAA,KAAK,CAACS,GAAN,CAAU,OAAV,EACKC,IADL,CACWC,QAAD,IAAc;AAEhB,WAAKC,QAAL,CAAe;AACXN,QAAAA,KAAK,EAAEK,QAAQ,CAACE,IADL;AAEXN,QAAAA,QAAQ,EAAE;AAFC,OAAf;AAKH,KARL,EASKO,KATL,CASYC,KAAD,IAAU;AACjB;AACA;AACI,WAAKH,QAAL,CAAc;AACVL,QAAAA,QAAQ,EAAC,KADC;AAEVQ,QAAAA;AAFU,OAAd;AAKH,KAjBL;AAoBH;;AAGDC,EAAAA,MAAM,GAAE;AACJ;AACA,UAAM;AAAET,MAAAA,QAAF;AAAYQ,MAAAA,KAAZ;AAAmBT,MAAAA;AAAnB,QAA4B,KAAKD,KAAvC,CAFI,CAKJ;;AACA,QAAG,CAACE,QAAJ,EAAa;AACT,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADS,CAIb;AACC,KALD,MAKO;AACH,0BACI;AAAK,QAAA,KAAK,EAAI;AAACU,UAAAA,SAAS,EAAE;AAAZ,SAAd;AAAA,+BACI;AAAA,kCACI;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAYI;AAAA,sBACKX,KAAK,CAACY,GAAN,CAAUC,IAAI,iBACf;AAAA,sCACI;AAAA,0BAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAMF,IAAI,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA,0BAAMH,IAAI,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA,0BAAMJ,IAAI,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA,0BAAML,IAAI,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA,eAASN,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA,oBADC;AADL;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AA6BH;AACJ;;AA7E8B;;AAiFnC,eAAenB,KAAf","sourcesContent":["//component to view all dogs\r\nimport React from \"react\";\r\nimport {Link, useNavigate} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Books extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          books: [],\r\n          isLoaded: true\r\n        }\r\n     \r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        axios.get('/book')\r\n            .then((response) => {\r\n           \r\n                this.setState( {\r\n                    books: response.data,\r\n                    isLoaded: true\r\n                })\r\n                \r\n            })\r\n            .catch((error)=> {\r\n            // handle error \r\n            // in case we get an error from the server, e.g. the server is offline\r\n                this.setState({\r\n                    isLoaded:false,\r\n                    error\r\n                })\r\n                \r\n            })\r\n       \r\n           \r\n    }\r\n\r\n\r\n    render(){\r\n        //assign variables using the state\r\n        const { isLoaded, error, books} = this.state;\r\n        \r\n      \r\n        // also render this if the SERVER is offline\r\n        if(!isLoaded){\r\n            return(\r\n                <div>The page is loading or the SERVER is down...</div>\r\n            )\r\n        //render this part of code if we received the data from the server\r\n        } else {\r\n            return(\r\n                <div style = {{textAlign: 'center',}}>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Title</th>\r\n                                <th>Author</th>\r\n                                <th>ISBN</th>\r\n                                <th>Year Publication</th>\r\n                                <th>Publishing House</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {books.map(book => (\r\n                            <tr key={book._id}>\r\n                                <td>{book._id}</td>\r\n                                <td>{book.title}</td>\r\n                                <td >{book.author}</td>\r\n                                <td >{book.ISBN}</td>\r\n                                <td >{book.yearPublication}</td>\r\n                                <td >{book.publishingHouse}</td>\r\n                        </tr>\r\n                        ))}\r\n                        </tbody> \r\n                    </table>\r\n              </div>  \r\n            )\r\n        }\r\n    }\r\n}\r\n    \r\n\r\nexport default Books;"]},"metadata":{},"sourceType":"module"}